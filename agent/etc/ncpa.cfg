#
#   NCPA Main Config File
#   ---------------------
#

#
# -------------------------------
# General Configuration
# -------------------------------
#

[general]

#
# Check logging (in ncpa.db and the interface) is on by default, you can disable it
# if you do not want to record the check requests that are coming in or checks being
# sent over NRDP.
# Default: 1
#
# check_logging =

#
# Check logging time - how long in DAYS you'd like to keep checks in the database.
# Default: 30
#
# check_logging_time =

#
# General log file location
# This log captures start up and shutdown info, as well as status if the status option is invoked.
# A separate file is specified for listener and passive, each, in their respective sections
# Each log file should have a different name. The processes are not designed to share a file,
# and erroneous data or file corruption may result.
# Default: logfile = var/log/ncpa.log
#
# logfile =

# Logging file level, location, and the PID location
# Default: loglevel = info (debug, info, warning, error)
# Default: pidfile = var/run/ncpa_listener.pid (leave listener in pid file name)
#
loglevel = debug
# pidfile =

#
# The max size allowed for a log file in megabytes.
# When the log becomes larger than this, the log will be rolled over
# and a new log will be started.
# Default: 5
#
# logmaxmb =

#
# The max number of log rollovers that will be kept.
# Default: 5
#
# logbackups =

# This is for Unix only (Linux, Mac OS X, etc)
#
# Default: uid = nagios
# Default: gid = nagios
#
# uid =
# gid =

#
# Display all mounted disk partitions
# (essentially setting all=True here: https://psutil.readthedocs.io/en/latest/#psutil.disk_partitions)
# Default: 1
#
# all_partitions =

#
# Excluded file system types removes these fs types from the disk metrics
# (This is mostly only noteable on UNIX systems but also works on Windows if you need it)
# Default: aufs,autofs,binfmt_misc,cifs,cgroup,configfs,debugfs,devpts,devtmpfs,
#          encryptfs,efivarfs,fuse,fusectl,hugetlbfs,mqueue,nfs,overlayfs,proc,pstore,
#          rpc_pipefs,securityfs,selinuxfs,smb,sysfs,tmpfs,tracefs,nfsd,xenfs
#
# exclude_fs_types =

#
# The default unit to convert bytes (B) into if no unit is specified
# (Gi = 1024 MiB, G = 1000 MB)
#
# Default: Gi
#
# default_units =

#
# -------------------------------
# Listener Configuration (daemon)
# -------------------------------
#

[listener]

#
# IP address and port number for the Listener to use for the web GUI and API
#
# :: allows for dual stack (IPv4 and IPv6 on most linux systems) but will only allow
# for IPv6 connections on Windows
# 0.0.0.0 allows for IPv4 connections only on Windows and most linux systems
#
# Default ip:  ::
# Default ip (Windows): 0.0.0.0
# Default port: 5693
#
# ip =
# port =

#
# SSL connection and certificate config (if an SSL option is not available on some older
# operating systems it will default back to TLSv1)
# ssl_version options: TLSv1, TLSv1_1, TLSv1_2
# Default: sTLSv1_2
#
# ssl_version = TLSv1_2

# Certificate
# Default: adhoc
#
# certificate =

# ssl_ciphers can contain a list of supported cyphers. None defaults to whatever is available on your system.
# Default: None
#
# ssl_ciphers =

#
# Listener log file location (See [General] section for logging level, and the PID file location)
# Default: logfile = var/log/ncpa_listener.log
#
# logfile =

#
# Delay the listener (API & web GUI) from starting in seconds
# Default: 0
#
# delay_start =

#
# Allow admin functionality in the web GUI. When this is set to 0, the admin section will not
# be displayed in the header and will not be available to be accessed.
# Default: 1
#
# admin_gui_access =

#
# Admin password for the admin section in the web GUI, by default there is no admin
# password and the admin section of the GUI can be accessed by anyone if admin_gui_access is set to 1.
# Default: None
#
# Note: Setting this value to 'None' will automatically log you in, setting it empty will allow you to
# log in using a blank password.
#
# admin_password =

#
# Require admin password to access ALL of the web GUI.
# This does not affect API access via token (community_string).
# Default: 0
#
# admin_auth_only =

#
# Comma separated list of allowed hosts that can access the API (and GUI)
# Supported types: IPv4, IPv4-mapped IPv6, IPv6, hostnames
# Hostname wildcards are not supported.
# No entry allows any hosts to connect
#
# Exmaple IPv4: 192.168.23.15
# Example IPv4 subnet: 192.168.0.0/28
# Example IPv4-mapped IPv6: ::ffff:192.168.1.15
# Example IPv6: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
# Example hostname: asterisk.mydomain.com
# Example mixed types: 192.168.23.15, 192.168.0.0/28, ::ffff:192.168.1.15, 2001:0db8:85a3:0000:0000:8a2e:0370:7334, asterisk.mydomain.com
# Default: no entry
#
# allowed_hosts =

#
# Number of maximum concurrent connections to the NCPA server.
# Use "None" for unlimited.
# Default: 200
#
# max_connections =

#
# Set the URL to use in the X-Frame-Options and Content-Security-Policy headers
# in order to enable the NCPA GUI to be allowed to load into a frame
# Default: None
# Example: mycoolwebsite.com
# Example: *.mycoolwebsite.com
#
# allowed_sources =

#
# -------------------------------
# Listener Configuration (API)
# -------------------------------
#

[api]

#
# The token that will be used to log into the basic web GUI (API browser, graphs, top charts, etc)
# and to authenticate requests to the API and requests through check_ncpa.py
# Default: mytoken
#
# community_string =

#
# -------------------------------
# Passive Configuration (daemon)
# -------------------------------
#

[passive]

#
# Handlers are a comma separated list of what you would like the passive agent to run
# Default: None
# Options:
#   nrdp, kafkaproducer
#
# Example:
# handlers = nrdp,kafkaproducer
#
# handlers =

#
# Passive check interval - the amount in seconds to wait between each passive check by default,
# this can be overwritten by adding on a "|<duration>" in seconds to the passive check config
# Default: 300 (5 minutes)
#
# sleep =

#
# Passive log file location (See [General] section for logging file level, and the PID file location)
# Default: logfile = var/log/ncpa_passive.log
#
# logfile =

#
# Delay passive checks from starting in seconds
# Default: 0
#
# delay_start =

#
# -------------------------------
# Passive Configuration (NRDP)
# -------------------------------
#

[nrdp]

#
# Connection settings to the NRDP server
# parent = NRDP server location (ex: http://<address>/nrdp)
# token = NRDP server token used to send NRDP results
#
# parent =
# token =

#
# The hostname that will replace %HOSTNAME% in the check definitions and will be
# sent to NRDP with the check name as the service description (service name)
# Default: NCPA 2
#
# hostname =

#
# Connection timeout in seconds that will be used for transmitting the
# passive check results via HTTP POST requests to the NRDP server
# Default: 10
#
# connection_timeout =

#
# -------------------------------
# Passive Configuration (Kafka)
# -------------------------------
#

[kafkaproducer]
# Defaults
# hostname = None
# servers = localhost:9092
# clientname = NCPA-Kafka
# topic = ncpa
#
# hostname =
# servers =
# clientname =
# topic =

#
# -------------------------------
# Plugin Configuration
# -------------------------------
#

[plugin directives]

#
# Plugin path where all plugins will be ran from.
# Default: plugins/
#
# plugin_path =

#
# Follow symlinks located in the plugin path. 0 for no, 1 for yes.
#
# This is for Unix only (Linux, Mac OS X, etc)
# Default: 0
#
# follow_symlinks =

#
# Plugin execution timeout in seconds. Different than the check_ncpa.py timeout, which is
# normally for network connection issues. Will return a CRITICAL value and error when the plugin
# reaches the defined max execution timeout and kills the process.
# Default: 59
#
# plugin_timeout =

#
# Comma separated list of plugins to run through sudo. Note: You will need to update your sudoers
# configuration for these plugins to work when called with sudo.
#
# Example: check_special,check_root_files
# (Command line: sudo /<plugin_absolute_path>/check_special <arguments>)
#
# This is for Unix only (Linux, Mac OS X, etc)
#
# run_with_sudo =

#
# Extensions for plugins
# ----------------------
# The extension for the plugin denotes how NCPA will try to run the plugin. Use this
# for setting how you want to run the plugin in the command line.
#
# NOTE: Plugins without an extension will be ran in the cmdline as follows:
#       $plugin_name $plugin_args
#
# Defaults:
# Linux
# .sh = /bin/sh $plugin_name $plugin_args
# .py = python3 $plugin_name $plugin_args
# .pl = perl $plugin_name $plugin_args
# .php = php $plugin_name $plugin_args
#
# Windows
# .ps1 = powershell -ExecutionPolicy Bypass -File $plugin_name $plugin_args
# .vbs = cscript $plugin_name $plugin_args //NoLogo
# .wsf = cscript $plugin_name $plugin_args //NoLogo
# .bat = cmd /c $plugin_name $plugin_args
#
# Since windows NCPA is 32-bit, if you need to use 64-bit powershell, try the following for
# the powershell plugin definition:
# .ps1 = c:\windows\sysnative\windowspowershell\v1.0\powershell.exe -ExecutionPolicy Unrestricted -File $plugin_name $plugin_args
#

# Linux / Mac OS X
# .sh =
# .py =
# .pl =
# .php =

# Windows
# .ps1 =
# .vbs =
# .wsf =
# .bat =
